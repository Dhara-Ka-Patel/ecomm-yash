"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es6.object.assign");

require("core-js/modules/es7.array.includes");

require("core-js/modules/web.dom.iterable");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledSystem = require("styled-system");

var _Checkbox = _interopRequireDefault(require("./Checkbox"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var CheckboxGroup =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CheckboxGroup, _React$Component);

  function CheckboxGroup(props) {
    var _this;

    _classCallCheck(this, CheckboxGroup);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckboxGroup).call(this, props));
    _this.onItemChange = _this.onItemChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(CheckboxGroup, [{
    key: "onItemChange",
    value: function onItemChange(e, _ref) {
      var value = _ref.value;
      var _this$props = this.props,
          values = _this$props.values,
          radio = _this$props.radio;

      if (values.includes(value)) {
        this.props.onChange(values.filter(function (elem) {
          return elem !== value;
        }));
        return;
      }

      if (radio) {
        this.props.onChange([value]);
        return;
      }

      this.props.onChange(values.concat([value]));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          template = _this$props2.template,
          className = _this$props2.className,
          values = _this$props2.values,
          radio = _this$props2.radio,
          horizontal = _this$props2.horizontal,
          color = _this$props2.color;
      var CheckboxGroupItemTemplate = template || _Checkbox.default;
      return _react.default.createElement("div", {
        className: `web-rx checkbox-group ${className}`
      }, this.props.items.map(function (item) {
        return _react.default.createElement(CheckboxGroupItemTemplate, _extends({}, item.props, {
          horizontal: horizontal,
          radio: radio,
          key: item.value,
          value: item.value,
          label: item.label,
          checked: values.includes(item.value),
          onChange: _this2.onItemChange,
          disabled: item.disabled,
          color: color,
          py: 1,
          pr: 2
        }));
      }));
    }
  }]);

  return CheckboxGroup;
}(_react.default.Component);

CheckboxGroup.defaultProps = {
  items: [],
  className: null,
  radio: false,
  horizontal: false,
  template: null,
  values: [],
  color: '#2196F3',
  onChange: function onChange() {}
};
CheckboxGroup.propTypes = {
  className: _propTypes.default.string,
  items: _propTypes.default.array,
  // eslint-disable-line
  radio: _propTypes.default.bool,
  horizontal: _propTypes.default.bool,
  template: _propTypes.default.node,
  values: _propTypes.default.arrayOf(_propTypes.default.string),
  onChange: _propTypes.default.func,
  color: _propTypes.default.string
};
var StyledCheckboxGroup = (0, _styledComponents.default)(CheckboxGroup)`
  ${_styledSystem.space}
  ${_styledSystem.height}
  ${_styledSystem.width}
`;
var _default = StyledCheckboxGroup;
exports.default = _default;