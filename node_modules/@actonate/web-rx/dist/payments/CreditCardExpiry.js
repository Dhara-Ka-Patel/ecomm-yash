"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/es6.object.assign");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledSystem = require("styled-system");

var _reactCreditCardPrimitives = require("react-credit-card-primitives");

var _controls = require("../controls");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var CreditCardExpiry =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CreditCardExpiry, _React$Component);

  function CreditCardExpiry(props) {
    var _this;

    _classCallCheck(this, CreditCardExpiry);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreditCardExpiry).call(this, props));
    _this.state = {
      value: props.value
    };
    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(CreditCardExpiry, [{
    key: "onChange",
    value: function onChange(_ref) {
      var month = _ref.month,
          year = _ref.year,
          valid = _ref.valid;
      var value = `${month}/${year}`;
      this.setState({
        value: value
      });
      this.props.onChange(value, month, year, valid);
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement(_reactCreditCardPrimitives.Expiration, {
        rawValue: this.state.value,
        onChange: this.onChange,
        render: function render(_ref2) {
          var getInputProps = _ref2.getInputProps;
          return _react.default.createElement(_controls.Input, _extends({
            fluid: true
          }, getInputProps()));
        }
      });
    }
  }]);

  return CreditCardExpiry;
}(_react.default.Component);

CreditCardExpiry.defaultProps = {
  onChange: function onChange() {},
  value: ''
};
CreditCardExpiry.propTypes = {
  value: _propTypes.default.string,
  onChange: _propTypes.default.func
};
var StyledCreditCardExpiry = (0, _styledComponents.default)(CreditCardExpiry)`
  ${_styledSystem.space}
  ${_styledSystem.height}
  ${_styledSystem.width}
`;
var _default = StyledCreditCardExpiry;
exports.default = _default;